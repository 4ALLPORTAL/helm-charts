{{- if .Values.monitoring.deadMansSwitch.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: dead-mans-switch-registration
  namespace: {{ $.Release.Namespace }}
  labels: {{- include "common.labels.standard" $ | nindent 4 }}
    app.kubernetes.io/component: dead-mans-switch
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: register
          image: {{ include "base-cluster.kubectl.image" . }}
          {{- if .Values.global.kubectl.image.repository | contains "@" }}
          imagePullPolicy: IfNotPresent
          {{- else }}
          imagePullPolicy: Always
          {{- end }}
          command:
            - bash
            - -ex
            - -c
            - |
              set -o pipefail

              apiKey={{- .Values.monitoring.deadMansSwitch.apiKey | quote }}
              function createCheck() {
                local checkName="$1"
                local data='{"name": "'"$checkName"'", "tags": "k8s {{ .Values.global.clusterName -}}", "timeout": 120, "grace": 60, "channels": "{{- .Values.global.clusterName -}}", "unique": ["name"]}'

                curl --silent --fail --retry 5 --max-time 30 --header "X-Api-Key: $apiKey" https://healthchecks.io/api/v1/checks/ --data "$data"
                curl --silent --fail --retry 5 --max-time 30 "https://hc-ping.com/{{- .Values.monitoring.deadMansSwitch.pingKey -}}/$checkName"
              }

              checkName={{- printf "k8s-cluster-%s-%s" (.Values.global.baseDomain | replace "." "-") .Values.global.clusterName | quote }}
              {{- if .Values.monitoring.prometheus.enabled }}
              createCheck "$checkName-monitoring"
              {{- end }}
              createCheck "$checkName-scheduling"
{{- end }}
